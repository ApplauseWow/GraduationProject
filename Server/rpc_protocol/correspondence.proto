// [python quickstart](https://grpc.io/docs/quickstart/python.html#run-a-grpc-application)
// python -m grpc_tools.protoc --python_out=. --grpc_python_out=. -I. correspondence.proto

// backend.proto
syntax = "proto3";

service Backend {
    // 用于测试
    rpc SayHello(HelloRequest) returns (HelloResponse) {}
    rpc SayHelloAgain(HelloRequest) returns (HelloResponse) {}

    // 正式接口
    // ->数据库交互接口
    // ->->公告界面
    rpc GetAllNotes(RequestStruct) returns (ResponseStruct) {} // 教师学生共用，通过角色类型划分权限
    rpc GetTheNote(RequestStruct) returns (ResponseStruct) {} // 教师学生共用，通过id获取
    rpc InsertANote(RequestStruct) returns (ResponseStruct) {} // 教师专用
    rpc ModifyTheNote(RequestStruct) returns (ResponseStruct) {} // 教师专用
    // ->->


}


// 为了避免麻烦，特别是列表图片等　直接采用通用的字节流全部用字典打包序列化成字节流传送
// 所有传输数据都由pickle在发送前序列化，接收时反序列化
// 用于测试数据结构
message HelloRequest {
    bytes para = 1;
}

message HelloResponse {
    bytes result = 1;
}

// 正式数据结构
message RequestStruct {
    bytes parameter = 1;
}

message ResponseStruct {
    bytes result = 1;
}